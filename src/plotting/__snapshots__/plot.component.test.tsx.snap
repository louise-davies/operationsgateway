// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ConnectedPlot component constructs an empty dataset if we have no records available 1`] = `
<DocumentFragment>
  <canvas
    role="img"
  >
    data={
  "datasets": [
    {
      "label": "shotnum",
      "backgroundColor": "#e31a1c",
      "data": []
    }
  ]
}
options={
  "plugins": {
    "title": {
      "text": "test title",
      "display": true
    }
  },
  "scales": {
    "x": {
      "type": "time"
    },
    "y": {
      "type": "logarithmic"
    }
  }
}
type="line"
aria-label="test title plot"

  </canvas>
</DocumentFragment>
`;

exports[`ConnectedPlot component constructs data to insert into a Plot component 1`] = `
<DocumentFragment>
  <canvas
    role="img"
  >
    data={
  "datasets": [
    {
      "label": "shotnum",
      "backgroundColor": "#e31a1c",
      "data": [
        {
          "x": 1640995200000,
          "y": 1
        },
        {
          "x": 1641081600000,
          "y": 2
        },
        {
          "x": 1641168000000,
          "y": 3
        }
      ]
    }
  ]
}
options={
  "plugins": {
    "title": {
      "text": "test title",
      "display": true
    }
  },
  "scales": {
    "x": {
      "type": "time"
    },
    "y": {
      "type": "linear"
    }
  }
}
type="scatter"
aria-label="test title plot"

  </canvas>
</DocumentFragment>
`;

exports[`ConnectedPlot component inserts null points if an x or y value does not exist 1`] = `
<DocumentFragment>
  <canvas
    role="img"
  >
    data={
  "datasets": [
    {
      "label": "activeExperiment",
      "backgroundColor": "#e31a1c",
      "data": [
        {
          "x": 1,
          "y": 1
        },
        {
          "x": null,
          "y": null
        },
        {
          "x": 3,
          "y": 3
        }
      ]
    }
  ]
}
options={
  "plugins": {
    "title": {
      "text": "test title",
      "display": true
    }
  },
  "scales": {
    "x": {
      "type": "linear"
    },
    "y": {
      "type": "logarithmic"
    }
  }
}
type="scatter"
aria-label="test title plot"

  </canvas>
</DocumentFragment>
`;

exports[`Plot component renders a plot which passes the correct props to chart.js 1`] = `
<DocumentFragment>
  <canvas
    role="img"
  >
    data={
  "datasets": [
    {
      "label": "Test",
      "data": [
        {
          "x": 1,
          "y": 1
        },
        {
          "x": 2,
          "y": 2
        },
        {
          "x": 3,
          "y": 3
        }
      ]
    }
  ]
}
options={
  "plugins": {
    "title": {
      "text": "Test",
      "display": true
    }
  },
  "scales": {
    "x": {
      "type": "time"
    },
    "y": {
      "type": "linear"
    }
  }
}
type="scatter"
aria-label="Test plot"

  </canvas>
</DocumentFragment>
`;
